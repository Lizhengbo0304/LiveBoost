<ResourceDictionary xmlns = "http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x = "http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc = "https://handyorg.github.io/handycontrol"
                    xmlns:controls = "clr-namespace:LiveBoost.Toolkit.Controls" >
    <Style x:Key = "IconButtonStyle" TargetType = "Button" >
        <Setter Property = "BorderBrush" Value = "Transparent" />
        <Setter Property = "BorderThickness" Value = "0" />
        <Setter Property = "HorizontalAlignment" Value = "Center" />
        <Setter Property = "VerticalAlignment" Value = "Center" />
        <Setter Property = "HorizontalContentAlignment" Value = "Center" />
        <Setter Property = "VerticalContentAlignment" Value = "Center" />
        <Setter Property = "Background" Value = "Transparent" />
        <Setter Property = "Foreground" Value = "White" />
        <Setter Property = "controls:IconElement.Height"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
        <Setter Property = "controls:IconElement.Width"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" />
        <Setter Property = "hc:BackgroundSwitchElement.MouseHoverBackground"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property = "hc:BackgroundSwitchElement.MouseDownBackground"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property = "Template" >
            <Setter.Value>
                <ControlTemplate TargetType = "Button" >
                    <Border x:Name = "border" Background = "{TemplateBinding Background}"
                            BorderBrush = "{TemplateBinding BorderBrush}"
                            BorderThickness = "{TemplateBinding BorderThickness}"
                            CornerRadius = "{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" >
                        <Grid HorizontalAlignment = "{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment = "{TemplateBinding VerticalContentAlignment}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name = "ColumnDefinition0" />
                                <ColumnDefinition x:Name = "ColumnDefinition1" Width = "0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name = "RowDefinition0" Height = "Auto" />
                                <RowDefinition x:Name = "RowDefinition1" Height = "*" />
                            </Grid.RowDefinitions>
                            <Image x:Name = "Icon" Grid.Row = "0" Grid.Column = "0"
                                   Width = "{Binding Path=(controls:IconElement.Width), RelativeSource={RelativeSource TemplatedParent}}"
                                   Height = "{Binding Path=(controls:IconElement.Height), RelativeSource={RelativeSource TemplatedParent}}"
                                   Margin = "{Binding Path=(controls:IconElement.Margin), RelativeSource={RelativeSource TemplatedParent}}"
                                   hc:ImageAttach.SourceFailed = "{Binding Path=(hc:ImageAttach.SourceFailed), RelativeSource={RelativeSource TemplatedParent}}"
                                   RenderTransformOrigin = "0.5 0.5"
                                   Source = "{Binding Path=(controls:IconElement.Source), RelativeSource={RelativeSource TemplatedParent}, IsAsync=True}"
                                   Stretch = "{Binding Path=(controls:IconElement.Stretch), RelativeSource={RelativeSource TemplatedParent}}" >
                                <Image.RenderTransform>
                                    <RotateTransform
                                        Angle = "{Binding Path=(controls:IconElement.Angle), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Image.RenderTransform>
                            </Image>

                            <TextBlock x:Name = "ContentPresenterMain" Grid.Row = "1" Grid.Column = "0"
                                       Margin = "{TemplateBinding Padding}"
                                       HorizontalAlignment = "{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment = "{TemplateBinding VerticalContentAlignment}"
                                       SnapsToDevicePixels = "{TemplateBinding SnapsToDevicePixels}"
                                       Text = "{TemplateBinding Content}" TextTrimming = "CharacterEllipsis"
                                       TextWrapping = "NoWrap" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "controls:IconElement.Placement" Value = "Center" >
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "0" />
                        </Trigger>
                        <!--  图标在底部时  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Bottom" >
                            <Setter TargetName = "Icon" Property = "Grid.Row" Value = "1" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "Auto" />
                        </Trigger>
                        <!--  图标在左侧时  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Left" >
                            <Setter TargetName = "Icon" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "Icon" Property = "Grid.Column" Value = "0" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Column" Value = "1" />
                            <Setter TargetName = "ColumnDefinition0" Property = "Width" Value = "Auto" />
                            <Setter TargetName = "ColumnDefinition1" Property = "Width" Value = "*" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "0" />
                        </Trigger>
                        <!--  图标在右侧时  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Right" >
                            <Setter TargetName = "Icon" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "Icon" Property = "Grid.Column" Value = "1" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Column" Value = "0" />
                            <Setter TargetName = "ColumnDefinition0" Property = "Width" Value = "*" />
                            <Setter TargetName = "ColumnDefinition1" Property = "Width" Value = "Auto" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "0" />
                        </Trigger>
                        <Trigger Property = "Content" Value = "{x:Null}" >
                            <Setter TargetName = "ContentPresenterMain" Property = "Visibility" Value = "Collapsed" />
                        </Trigger>
                        <Trigger Property = "controls:IconElement.Source" Value = "{x:Null}" >
                            <Setter TargetName = "Icon" Property = "Visibility" Value = "Collapsed" />
                        </Trigger>

                        <Trigger Property = "IsMouseOver" Value = "True" >
                            <Setter TargetName = "border" Property = "Background"
                                    Value = "{Binding Path=(hc:BackgroundSwitchElement.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property = "Opacity" Value = "0.8" />
                        </Trigger>
                        <Trigger Property = "IsPressed" Value = "True" >
                            <Setter TargetName = "border" Property = "Background"
                                    Value = "{Binding Path=(hc:BackgroundSwitchElement.MouseDownBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property = "Opacity" Value = "0.6" />
                        </Trigger>
                        <Trigger Property = "IsEnabled" Value = "False" >
                            <Setter Property = "Opacity" Value = "0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key = "IconButtonWithoutOpacityStyle" TargetType = "Button" >
        <Setter Property = "BorderBrush" Value = "Transparent" />
        <Setter Property = "BorderThickness" Value = "0" />
        <Setter Property = "HorizontalAlignment" Value = "Center" />
        <Setter Property = "VerticalAlignment" Value = "Center" />
        <Setter Property = "HorizontalContentAlignment" Value = "Center" />
        <Setter Property = "VerticalContentAlignment" Value = "Center" />
        <Setter Property = "Background" Value = "Transparent" />
        <Setter Property = "controls:IconElement.Height"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
        <Setter Property = "controls:IconElement.Width"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" />
        <Setter Property = "hc:BackgroundSwitchElement.MouseHoverBackground"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property = "hc:BackgroundSwitchElement.MouseDownBackground"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property = "Template" >
            <Setter.Value>
                <ControlTemplate TargetType = "Button" >
                    <Border x:Name = "border" Background = "{TemplateBinding Background}"
                            BorderBrush = "{TemplateBinding BorderBrush}"
                            BorderThickness = "{TemplateBinding BorderThickness}"
                            CornerRadius = "{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" >
                        <Grid HorizontalAlignment = "{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment = "{TemplateBinding VerticalContentAlignment}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name = "ColumnDefinition0" />
                                <ColumnDefinition x:Name = "ColumnDefinition1" Width = "0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name = "RowDefinition0" Height = "Auto" />
                                <RowDefinition x:Name = "RowDefinition1" Height = "*" />
                            </Grid.RowDefinitions>
                            <Image x:Name = "Icon" Grid.Row = "0" Grid.Column = "0"
                                   Width = "{Binding Path=(controls:IconElement.Width), RelativeSource={RelativeSource TemplatedParent}}"
                                   Height = "{Binding Path=(controls:IconElement.Height), RelativeSource={RelativeSource TemplatedParent}}"
                                   Margin = "{Binding Path=(controls:IconElement.Margin), RelativeSource={RelativeSource TemplatedParent}}"
                                   hc:ImageAttach.SourceFailed = "{Binding Path=(hc:ImageAttach.SourceFailed), RelativeSource={RelativeSource TemplatedParent}}"
                                   RenderTransformOrigin = "0.5 0.5"
                                   Source = "{Binding Path=(controls:IconElement.Source), RelativeSource={RelativeSource TemplatedParent}, IsAsync=True}"
                                   Stretch = "{Binding Path=(controls:IconElement.Stretch), RelativeSource={RelativeSource TemplatedParent}}" >
                                <Image.RenderTransform>
                                    <RotateTransform
                                        Angle = "{Binding Path=(controls:IconElement.Angle), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Image.RenderTransform>
                            </Image>

                            <TextBlock x:Name = "ContentPresenterMain" Grid.Row = "1" Grid.Column = "0"
                                       Margin = "{TemplateBinding Padding}"
                                       HorizontalAlignment = "{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment = "{TemplateBinding VerticalContentAlignment}"
                                       SnapsToDevicePixels = "{TemplateBinding SnapsToDevicePixels}"
                                       Text = "{TemplateBinding Content}" TextTrimming = "CharacterEllipsis"
                                       TextWrapping = "NoWrap" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "controls:IconElement.Placement" Value = "Center" >
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "0" />
                        </Trigger>
                        <!--  图标在底部时  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Bottom" >
                            <Setter TargetName = "Icon" Property = "Grid.Row" Value = "1" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "Auto" />
                        </Trigger>
                        <!--  图标在左侧时  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Left" >
                            <Setter TargetName = "Icon" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "Icon" Property = "Grid.Column" Value = "0" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Column" Value = "1" />
                            <Setter TargetName = "ColumnDefinition0" Property = "Width" Value = "Auto" />
                            <Setter TargetName = "ColumnDefinition1" Property = "Width" Value = "*" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "0" />
                        </Trigger>
                        <!--  图标在右侧时  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Right" >
                            <Setter TargetName = "Icon" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "Icon" Property = "Grid.Column" Value = "1" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Column" Value = "0" />
                            <Setter TargetName = "ColumnDefinition0" Property = "Width" Value = "*" />
                            <Setter TargetName = "ColumnDefinition1" Property = "Width" Value = "Auto" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "0" />
                        </Trigger>
                        <Trigger Property = "Content" Value = "{x:Null}" >
                            <Setter TargetName = "ContentPresenterMain" Property = "Visibility" Value = "Collapsed" />
                        </Trigger>
                        <Trigger Property = "controls:IconElement.Source" Value = "{x:Null}" >
                            <Setter TargetName = "Icon" Property = "Visibility" Value = "Collapsed" />
                        </Trigger>

                        <Trigger Property = "IsMouseOver" Value = "True" >
                            <Setter TargetName = "border" Property = "Background"
                                    Value = "{Binding Path=(hc:BackgroundSwitchElement.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property = "IsPressed" Value = "True" >
                            <Setter TargetName = "border" Property = "Background"
                                    Value = "{Binding Path=(hc:BackgroundSwitchElement.MouseDownBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key = "IconToggleButtonStyle" TargetType = "ToggleButton" >
        <Setter Property = "BorderBrush" Value = "Transparent" />
        <Setter Property = "BorderThickness" Value = "0" />
        <Setter Property = "HorizontalAlignment" Value = "Center" />
        <Setter Property = "VerticalAlignment" Value = "Center" />
        <Setter Property = "HorizontalContentAlignment" Value = "Center" />
        <Setter Property = "VerticalContentAlignment" Value = "Center" />
        <Setter Property = "Background" Value = "Transparent" />
        <Setter Property = "hc:BorderElement.CornerRadius" Value = "0" />
        <Setter Property = "controls:IconElement.Height"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
        <Setter Property = "controls:IconElement.Width"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" />
        <Setter Property = "controls:IconSwitchElement.HeightSelected"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
        <Setter Property = "controls:IconSwitchElement.WidthSelected"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" />
        <Setter Property = "controls:ForegroundSwitchElement.SelectedForeground"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
        <Setter Property = "controls:ForegroundSwitchElement.MouseOverForeground"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
        <Setter Property = "hc:BackgroundSwitchElement.MouseHoverBackground"
                Value = "{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property = "Template" >
            <Setter.Value>
                <ControlTemplate TargetType = "ToggleButton" >
                    <Border x:Name = "border" Background = "{TemplateBinding Background}"
                            BorderBrush = "{TemplateBinding BorderBrush}"
                            BorderThickness = "{TemplateBinding BorderThickness}"
                            CornerRadius = "{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" >
                        <Grid HorizontalAlignment = "{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment = "{TemplateBinding VerticalContentAlignment}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name = "ColumnDefinition0" />
                                <ColumnDefinition x:Name = "ColumnDefinition1" Width = "0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name = "RowDefinition0" Height = "Auto" />
                                <RowDefinition x:Name = "RowDefinition1" Height = "*" />
                            </Grid.RowDefinitions>
                            <Image x:Name = "Icon" Grid.Row = "0" Grid.Column = "0"
                                   Width = "{Binding Path=(controls:IconElement.Width), RelativeSource={RelativeSource TemplatedParent}}"
                                   Height = "{Binding Path=(controls:IconElement.Height), RelativeSource={RelativeSource TemplatedParent}}"
                                   Margin = "{Binding Path=(controls:IconElement.Margin), RelativeSource={RelativeSource TemplatedParent}}"
                                   hc:ImageAttach.SourceFailed = "{Binding Path=(hc:ImageAttach.SourceFailed), RelativeSource={RelativeSource TemplatedParent}}"
                                   RenderTransformOrigin = "0.5 0.5"
                                   Source = "{Binding Path=(controls:IconElement.Source), RelativeSource={RelativeSource TemplatedParent}, IsAsync=True}"
                                   Stretch = "{Binding Path=(controls:IconElement.Stretch), RelativeSource={RelativeSource TemplatedParent}}" >
                                <Image.RenderTransform>
                                    <RotateTransform
                                        Angle = "{Binding Path=(controls:IconElement.Angle), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Image.RenderTransform>
                            </Image>

                            <TextBlock x:Name = "ContentPresenterMain" Grid.Row = "1" Grid.Column = "0"
                                       Margin = "{TemplateBinding Padding}"
                                       HorizontalAlignment = "{TemplateBinding HorizontalAlignment}"
                                       VerticalAlignment = "{TemplateBinding VerticalAlignment}"
                                       FontSize = "{TemplateBinding FontSize}"
                                       Foreground = "{TemplateBinding Foreground}"
                                       SnapsToDevicePixels = "{TemplateBinding SnapsToDevicePixels}"
                                       Text = "{TemplateBinding Content}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  图标在底部替代为Center  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Center" >
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "0" />
                        </Trigger>
                        <!--  图标在底部时  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Bottom" >
                            <Setter TargetName = "Icon" Property = "Grid.Row" Value = "1" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "Auto" />
                        </Trigger>
                        <!--  图标在左侧时  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Left" >
                            <Setter TargetName = "Icon" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "Icon" Property = "Grid.Column" Value = "0" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Column" Value = "1" />
                            <Setter TargetName = "ColumnDefinition0" Property = "Width" Value = "Auto" />
                            <Setter TargetName = "ColumnDefinition1" Property = "Width" Value = "*" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "0" />
                        </Trigger>
                        <!--  图标在右侧时  -->
                        <Trigger Property = "controls:IconElement.Placement" Value = "Right" >
                            <Setter TargetName = "Icon" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Row" Value = "0" />
                            <Setter TargetName = "Icon" Property = "Grid.Column" Value = "1" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Grid.Column" Value = "0" />
                            <Setter TargetName = "ColumnDefinition0" Property = "Width" Value = "*" />
                            <Setter TargetName = "ColumnDefinition1" Property = "Width" Value = "Auto" />
                            <Setter TargetName = "RowDefinition0" Property = "Height" Value = "*" />
                            <Setter TargetName = "RowDefinition1" Property = "Height" Value = "0" />
                        </Trigger>
                        <Trigger Property = "Content" Value = "{x:Null}" >
                            <Setter TargetName = "ContentPresenterMain" Property = "Visibility" Value = "Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property = "IsChecked" Value = "False" />
                                <Condition Property = "controls:IconElement.Source" Value = "{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName = "Icon" Property = "Visibility" Value = "Collapsed" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property = "IsChecked" Value = "True" />
                                <Condition Property = "controls:IconSwitchElement.SourceSelected" Value = "{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName = "Icon" Property = "Visibility" Value = "Collapsed" />
                        </MultiTrigger>

                        <Trigger Property = "IsMouseOver" Value = "True" >
                            <Setter Property = "Opacity" Value = ".9" />
                            <Setter TargetName = "border" Property = "Background"
                                    Value = "{Binding Path=(hc:BackgroundSwitchElement.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Foreground"
                                    Value = "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ForegroundSwitchElement.MouseOverForeground)}" />
                        </Trigger>
                        <Trigger Property = "IsChecked" Value = "True" >
                            <Setter TargetName = "Icon" Property = "Source"
                                    Value = "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconSwitchElement.SourceSelected)}" />
                            <Setter TargetName = "Icon" Property = "Width"
                                    Value = "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconSwitchElement.WidthSelected)}" />
                            <Setter TargetName = "Icon" Property = "Height"
                                    Value = "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconSwitchElement.HeightSelected)}" />
                            <Setter TargetName = "ContentPresenterMain" Property = "Foreground"
                                    Value = "{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ForegroundSwitchElement.SelectedForeground)}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property = "IsPressed" Value = "True" >
                <Setter Property = "Opacity" Value = ".6" />
            </Trigger>
            <Trigger Property = "IsEnabled" Value = "False" >
                <Setter Property = "Opacity" Value = "0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>