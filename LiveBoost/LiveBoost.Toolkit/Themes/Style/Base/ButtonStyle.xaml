<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls="clr-namespace:LiveBoost.Toolkit.Controls"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="Button" x:Key="IconButtonStyle">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="controls:IconElement.Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
        <Setter Property="controls:IconElement.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" />
        <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        x:Name="border">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition Width="0" x:Name="ColumnDefinition1" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                                <RowDefinition Height="*" x:Name="RowDefinition1" />
                            </Grid.RowDefinitions>
                            <Image
                                Grid.Column="0"
                                Grid.Row="0"
                                Height="{Binding Path=(controls:IconElement.Height), RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="{Binding Path=(controls:IconElement.Margin), RelativeSource={RelativeSource TemplatedParent}}"
                                RenderTransformOrigin="0.5 0.5"
                                Source="{Binding Path=(controls:IconElement.Source), RelativeSource={RelativeSource TemplatedParent}, IsAsync=True}"
                                Stretch="{Binding Path=(controls:IconElement.Stretch), RelativeSource={RelativeSource TemplatedParent}}"
                                Width="{Binding Path=(controls:IconElement.Width), RelativeSource={RelativeSource TemplatedParent}}"
                                hc:ImageAttach.SourceFailed="{Binding Path=(hc:ImageAttach.SourceFailed), RelativeSource={RelativeSource TemplatedParent}}"
                                x:Name="Icon" />

                            <TextBlock
                                Grid.Column="0"
                                Grid.Row="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Text="{TemplateBinding Content}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                x:Name="ContentPresenterMain" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="controls:IconElement.Placement" Value="Center">
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <!--  图标在底部时  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="Icon" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                        </Trigger>
                        <!--  图标在左侧时  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="Icon" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Grid.Column" TargetName="Icon" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPresenterMain" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <!--  图标在右侧时  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="Icon" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Grid.Column" TargetName="Icon" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <Trigger Property="controls:IconSwitchElement.IsSelected" Value="True">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconSwitchElement.SourceSelected)}" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ContentPresenterMain" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="controls:IconElement.Source" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=(hc:BackgroundSwitchElement.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=(hc:BackgroundSwitchElement.MouseDownBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="IconButtonWithoutOpacityStyle">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="controls:IconElement.Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
        <Setter Property="controls:IconElement.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" />
        <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property="hc:BackgroundSwitchElement.MouseDownBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        x:Name="border">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition Width="0" x:Name="ColumnDefinition1" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                                <RowDefinition Height="*" x:Name="RowDefinition1" />
                            </Grid.RowDefinitions>
                            <Image
                                Grid.Column="0"
                                Grid.Row="0"
                                Height="{Binding Path=(controls:IconElement.Height), RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="{Binding Path=(controls:IconElement.Margin), RelativeSource={RelativeSource TemplatedParent}}"
                                RenderTransformOrigin="0.5 0.5"
                                Source="{Binding Path=(controls:IconElement.Source), RelativeSource={RelativeSource TemplatedParent}, IsAsync=True}"
                                Stretch="{Binding Path=(controls:IconElement.Stretch), RelativeSource={RelativeSource TemplatedParent}}"
                                Width="{Binding Path=(controls:IconElement.Width), RelativeSource={RelativeSource TemplatedParent}}"
                                hc:ImageAttach.SourceFailed="{Binding Path=(hc:ImageAttach.SourceFailed), RelativeSource={RelativeSource TemplatedParent}}"
                                x:Name="Icon" />

                            <TextBlock
                                Grid.Column="0"
                                Grid.Row="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Text="{TemplateBinding Content}"
                                TextTrimming="CharacterEllipsis"
                                TextWrapping="NoWrap"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                x:Name="ContentPresenterMain" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="controls:IconElement.Placement" Value="Center">
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <!--  图标在底部时  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="Icon" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                        </Trigger>
                        <!--  图标在左侧时  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="Icon" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Grid.Column" TargetName="Icon" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPresenterMain" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <!--  图标在右侧时  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="Icon" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Grid.Column" TargetName="Icon" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <Trigger Property="controls:IconSwitchElement.IsSelected" Value="True">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconSwitchElement.SourceSelected)}" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ContentPresenterMain" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="controls:IconElement.Source" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=(hc:BackgroundSwitchElement.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=(hc:BackgroundSwitchElement.MouseDownBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" x:Key="IconToggleButtonStyle">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="0" />
        <Setter Property="controls:IconElement.Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
        <Setter Property="controls:IconElement.Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" />
        <Setter Property="controls:IconSwitchElement.HeightSelected" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
        <Setter Property="controls:IconSwitchElement.WidthSelected" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" />
        <Setter Property="controls:ForegroundSwitchElement.SelectedForeground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
        <Setter Property="controls:ForegroundSwitchElement.MouseOverForeground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
        <Setter Property="hc:BackgroundSwitchElement.MouseHoverBackground" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(hc:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        x:Name="border">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition Width="0" x:Name="ColumnDefinition1" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                                <RowDefinition Height="*" x:Name="RowDefinition1" />
                            </Grid.RowDefinitions>
                            <Image
                                Grid.Column="0"
                                Grid.Row="0"
                                Height="{Binding Path=(controls:IconElement.Height), RelativeSource={RelativeSource TemplatedParent}}"
                                Margin="{Binding Path=(controls:IconElement.Margin), RelativeSource={RelativeSource TemplatedParent}}"
                                RenderTransformOrigin="0.5 0.5"
                                Source="{Binding Path=(controls:IconElement.Source), RelativeSource={RelativeSource TemplatedParent}, IsAsync=True}"
                                Stretch="{Binding Path=(controls:IconElement.Stretch), RelativeSource={RelativeSource TemplatedParent}}"
                                Width="{Binding Path=(controls:IconElement.Width), RelativeSource={RelativeSource TemplatedParent}}"
                                hc:ImageAttach.SourceFailed="{Binding Path=(hc:ImageAttach.SourceFailed), RelativeSource={RelativeSource TemplatedParent}}"
                                x:Name="Icon" />

                            <TextBlock
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                Grid.Column="0"
                                Grid.Row="1"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Text="{TemplateBinding Content}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                x:Name="ContentPresenterMain" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  图标在底部替代为Center  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Center">
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <!--  图标在底部时  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="Icon" Value="1" />
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                        </Trigger>
                        <!--  图标在左侧时  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="Icon" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Grid.Column" TargetName="Icon" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPresenterMain" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <!--  图标在右侧时  -->
                        <Trigger Property="controls:IconElement.Placement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="Icon" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Grid.Column" TargetName="Icon" Value="1" />
                            <Setter Property="Grid.Column" TargetName="ContentPresenterMain" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ContentPresenterMain" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="controls:IconElement.Source" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="controls:IconSwitchElement.SourceSelected" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value=".9" />
                            <Setter Property="Background" TargetName="border" Value="{Binding Path=(hc:BackgroundSwitchElement.MouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" TargetName="ContentPresenterMain" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ForegroundSwitchElement.MouseOverForeground)}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Source" TargetName="Icon" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconSwitchElement.SourceSelected)}" />
                            <Setter Property="Width" TargetName="Icon" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconSwitchElement.WidthSelected)}" />
                            <Setter Property="Height" TargetName="Icon" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:IconSwitchElement.HeightSelected)}" />
                            <Setter Property="Foreground" TargetName="ContentPresenterMain" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ForegroundSwitchElement.SelectedForeground)}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value=".6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
